datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes     Note[]
  videos    Video[]
  channels  Channel[]
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model ImageMap {
  id        String   @id @default(cuid())
  imageId    String
  image     Image   @relation(fields: [imageId], references: [id]) // Change made here
  start      Int      // Assuming start and end are integer values representing time in seconds
  end        Int
  videoId    String
  video      Video    @relation(fields: [videoId], references: [id])
}

model Image {
  id          String   @id @default(cuid())
  description String
  prompt      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  imageMap   ImageMap[]
}



model Video {
  id          String     @id @default(cuid())
  input       String
  title       String
  description String
  tags        String[]   @default([])
  script      String
  uploaded    Boolean    @default(false)
  voiceover   String     // Path to the mp3 file
  videofile   String     // Path to the mp4 file
  notes       String?
  channelId   String
  channel     Channel    @relation(fields: [channelId], references: [id], onDelete: Cascade)
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  imageMaps   ImageMap[]
  type        VideoType
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum VideoType {
  long
  short
}

enum VoiceModel {
  onyx
  fable
  female
}

model Channel {
  id           String      @id @default(cuid())
  name         String
  cta          String
  writingStyle String
  voicemodel   VoiceModel
  imageStyle   String
  videos       Video[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  userId       String
  user         User        @relation(fields: [userId], references: [id])
}
